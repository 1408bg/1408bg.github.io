const state = new Map();
const elements = new Map();

function useState(identifier, value) {
  if (!state.has(identifier)) {
    state.set(identifier, value);
    elements.set(identifier, []);
  } else {
    console.warn(`Identifier "${identifier}" already exists.`);
  }
}

function getElements(query) {
  return document.querySelectorAll(query);
}

function getElement(query) {
  return document.querySelector(query);
}

function linkState(identifier, query) {
  const domElements = getElements(query);
  if (elements.has(identifier)) {
    domElements.forEach(element => {
      elements.get(identifier).push(element);
      element.innerHTML = state.get(identifier);
    });
  } else {
    console.error(`Identifier "${identifier}" does not exist. Use useState to create it first.`);
  }
}

function setState(identifier, callback) {
  if (state.has(identifier)) {
    const currentValue = state.get(identifier);
    const newValue = callback(currentValue);

    if (newValue === undefined) {
      console.error(`Callback for identifier "${identifier}" did not return a value.`);
      return;
    }

    state.set(identifier, newValue);

    const linkedElements = elements.get(identifier);
    if (linkedElements) {
      linkedElements.forEach(element => {
        element.innerHTML = newValue;
      });
    }
  } else {
    console.error(`Identifier "${identifier}" does not exist. Use useState to create it first.`);
  }
}
